{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AddEditComponent = class AddEditComponent {\n  constructor(formBuilder, route, router, supplierService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.supplierService = supplierService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitting = false;\n    this.submitted = false;\n  }\n\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.id = this.route.snapshot.params['id']; // form with validation rules\n\n      this.form = this.formBuilder.group({\n        code: ['', Validators.required],\n        name: ['', Validators.required],\n        address: ['', Validators.required],\n        phone: ['', Validators.required],\n        contact: ['', Validators.required]\n      });\n      this.title = 'Add Supplier';\n\n      if (this.id) {\n        // edit mode\n        this.title = 'Edit Supplier';\n        this.loading = true;\n        const user = yield this.supplierService.getById(this.id);\n        this.form.patchValue(user);\n        this.loading = false;\n      }\n    });\n  } // convenience getter for easy access to form fields\n\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.submitted = true; // reset alerts on submit\n\n      this.alertService.clear(); // stop here if form is invalid\n\n      if (this.form.invalid) {\n        return;\n      }\n\n      this.submitting = true;\n\n      try {\n        var res = yield this.save();\n\n        if (res) {\n          this.alertService.success('Account saved', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigateByUrl('/user');\n        }\n      } catch (error) {\n        this.alertService.error(error);\n        this.submitting = false;\n      }\n    });\n  }\n\n  save() {\n    // create or update user based on id param\n    return this.id ? this.supplierService.update(this.id, this.form.value) : this.supplierService.add(this.form.value);\n  }\n\n};\nAddEditComponent = __decorate([Component({\n  templateUrl: 'add_edit.component.html'\n})], AddEditComponent);\nexport { AddEditComponent };","map":null,"metadata":{},"sourceType":"module"}