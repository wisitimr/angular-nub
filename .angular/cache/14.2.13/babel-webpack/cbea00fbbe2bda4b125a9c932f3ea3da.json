{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../account/account.service\";\nexport let JwtInterceptor = /*#__PURE__*/(() => {\n  class JwtInterceptor {\n    constructor(accountService) {\n      this.accountService = accountService;\n    }\n\n    intercept(request, next) {\n      // add auth header with jwt if user is logged in and request is to the api url\n      const user = this.accountService.userValue;\n      const isLoggedIn = user && user.accessToken;\n      const isApiUrl = request.url.startsWith(environment.apiUrl);\n\n      if (isLoggedIn && isApiUrl) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${user.accessToken}`\n          }\n        });\n      }\n\n      return next.handle(request);\n    }\n\n  }\n\n  JwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) {\n    return new (t || JwtInterceptor)(i0.ɵɵinject(i1.AccountService));\n  };\n\n  JwtInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JwtInterceptor,\n    factory: JwtInterceptor.ɵfac\n  });\n  return JwtInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}